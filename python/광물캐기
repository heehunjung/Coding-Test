from itertools import permutations
import sys
def mine(minerals, pick, num, index):
    current = 0
    pirodo = 0
    nextIndex = 0
    num *= 5
    
    if pick == 1:
        current = 25
    if pick == 2:
        current = 5
    if pick == 3:
        current = 1
    
    #광물을 다 캔 경우에요.
    if index == len(minerals):
        return [0,index]
    
    for i in range(index, len(minerals)):
        if num == 0:
            break
        
        num -= 1
        nextIndex = i + 1
        lock = 25
        if minerals[i] == "iron":
            lock = 5
        if minerals[i] == "stone":
            lock = 1
        
        temp = lock // current
        if temp == 0:
            pirodo += 1
        else:
            pirodo += temp
        
            
    return [pirodo,nextIndex]
        
def solution(picks, minerals):
    lenght = len(minerals)
    

    picksLists = list(permutations([1,2,3],3))
    prin
    minPirodo = sys.maxsize
    
    
    for picksList in picksLists:
        pirodo = 0
        index = 0 
        for current in picksList:
            plus = 0
            dia, iro, sto = picks
            if current == 1:
                if dia != 0:
                    plus, index = mine(minerals, current, dia, index)
            if current == 2:
                if iro != 0:
                    plus, index = mine(minerals, current, iro, index)
            if current == 3:
                if sto != 0:
                    plus, index = mine(minerals, current, sto, index)
            pirodo += plus

        
        minPirodo = min(pirodo, minPirodo)
    
    return minPirodo
